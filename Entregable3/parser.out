Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> query
Rule 1     query -> select_statement
Rule 2     query -> insert_statement
Rule 3     query -> update_statement
Rule 4     query -> delete_statement
Rule 5     query -> create_table_statement
Rule 6     query -> alter_table_statement
Rule 7     select_statement -> SELECT selection FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI
Rule 8     selection -> DISTINCT NAME
Rule 9     selection -> TODO
Rule 10    selection -> COUNT LPAREN NAME RPAREN
Rule 11    selection -> COUNT LPAREN TODO RPAREN
Rule 12    selection -> ASTERISK
Rule 13    selection -> NAME
Rule 14    condition_list -> condition
Rule 15    condition_list -> condition AND condition_list
Rule 16    condition_list -> condition OR condition_list
Rule 17    join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME
Rule 18    join_clause -> empty
Rule 19    where_clause -> WHERE condition_list
Rule 20    where_clause -> empty
Rule 21    group_by_clause -> GROUP_BY NAME
Rule 22    group_by_clause -> empty
Rule 23    having_clause -> HAVING condition
Rule 24    having_clause -> empty
Rule 25    order_by_clause -> ORDER_BY NAME
Rule 26    order_by_clause -> empty
Rule 27    limit_clause -> LIMIT NUMB
Rule 28    limit_clause -> empty
Rule 29    insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN VALUES LPAREN value_list RPAREN SEMI
Rule 30    value_list -> value_list COMMA NAME
Rule 31    value_list -> NAME COMMA NAME
Rule 32    value_list -> NAME COMMA NUMB
Rule 33    value_list -> NAME
Rule 34    value_list -> NUMB
Rule 35    update_statement -> UPDATE NAME SET NAME EQUALS NAME where_clause SEMI
Rule 36    update_statement -> UPDATE NAME SET NAME EQUALS NUMB where_clause SEMI
Rule 37    delete_statement -> DELETE_FROM NAME where_clause SEMI
Rule 38    create_table_statement -> CREATE_TABLE NAME ( column_definitions )
Rule 39    column_definitions -> column_definitions , column_definition
Rule 40    column_definitions -> column_definition
Rule 41    column_definition -> NAME type constraints
Rule 42    type -> NAME
Rule 43    type -> VARCHAR LPAREN NUMB RPAREN
Rule 44    constraints -> constraints constraint
Rule 45    constraints -> empty
Rule 46    constraint -> NOT_NULL
Rule 47    constraint -> UNIQUE
Rule 48    constraint -> PRIMARY_KEY
Rule 49    constraint -> FOREIGN_KEY
Rule 50    constraint -> DEFAULT NAME
Rule 51    alter_table_statement -> ALTER_TABLE NAME add_drop_column SEMI
Rule 52    add_drop_column -> ADD_COLUMN NAME type not_null_option
Rule 53    add_drop_column -> DROP_COLUMN NAME
Rule 54    not_null_option -> NOT_NULL
Rule 55    not_null_option -> empty
Rule 56    condition -> NAME EQUALS NUMB
Rule 57    condition -> NAME EQUALS NAME
Rule 58    condition -> NAME BETWEEN NUMB AND NUMB
Rule 59    condition -> NAME LIKE NAME
Rule 60    condition -> NAME GREATER NUMB
Rule 61    condition -> NAME IN ( value_list )
Rule 62    condition -> NAME DOT NAME EQUALS NUMB
Rule 63    condition -> NAME DOT NAME EQUALS NAME
Rule 64    condition -> COUNT LPAREN TODO RPAREN GREATER NUMB
Rule 65    condition -> NAME LESSER NUMB
Rule 66    condition -> COUNT LPAREN TODO RPAREN LESSER NUMB
Rule 67    empty -> <empty>

Terminals, with rules where they appear

(                    : 38 61
)                    : 38 61
,                    : 39
ADD_COLUMN           : 52
ALTER_TABLE          : 51
AND                  : 15 58
ASTERISK             : 12
BETWEEN              : 58
COMMA                : 30 31 32
COUNT                : 10 11 64 66
CREATE_TABLE         : 38
DEFAULT              : 50
DELETE_FROM          : 37
DISTINCT             : 8
DOT                  : 17 17 62 63
DROP_COLUMN          : 53
EQUALS               : 17 35 36 56 57 62 63
FOREIGN_KEY          : 49
FROM                 : 7
GREATER              : 60 64
GROUP_BY             : 21
HAVING               : 23
IN                   : 61
INSERT_INTO          : 29
JOIN                 : 17
LESSER               : 65 66
LIKE                 : 59
LIMIT                : 27
LPAREN               : 10 11 29 29 43 64 66
NAME                 : 7 8 10 13 17 17 17 17 17 21 25 29 30 31 31 32 33 35 35 35 36 36 37 38 41 42 50 51 52 53 56 57 57 58 59 59 60 61 62 62 63 63 63 65
NOT_NULL             : 46 54
NUMB                 : 27 32 34 36 43 56 58 58 60 62 64 65 66
ON                   : 17
OR                   : 16
ORDER_BY             : 25
PRIMARY_KEY          : 48
RPAREN               : 10 11 29 29 43 64 66
SELECT               : 7
SEMI                 : 7 29 35 36 37 51
SET                  : 35 36
TODO                 : 9 11 64 66
UNIQUE               : 47
UPDATE               : 35 36
VALUES               : 29
VARCHAR              : 43
WHERE                : 19
error                : 

Nonterminals, with rules where they appear

add_drop_column      : 51
alter_table_statement : 6
column_definition    : 39 40
column_definitions   : 38 39
condition            : 14 15 16 23
condition_list       : 15 16 19
constraint           : 44
constraints          : 41 44
create_table_statement : 5
delete_statement     : 4
empty                : 18 20 22 24 26 28 45 55
group_by_clause      : 7
having_clause        : 7
insert_statement     : 2
join_clause          : 7
limit_clause         : 7
not_null_option      : 52
order_by_clause      : 7
query                : 0
select_statement     : 1
selection            : 7
type                 : 41 52
update_statement     : 3
value_list           : 29 29 30 61
where_clause         : 7 35 36 37

Parsing method: LALR

state 0

    (0) S' -> . query
    (1) query -> . select_statement
    (2) query -> . insert_statement
    (3) query -> . update_statement
    (4) query -> . delete_statement
    (5) query -> . create_table_statement
    (6) query -> . alter_table_statement
    (7) select_statement -> . SELECT selection FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI
    (29) insert_statement -> . INSERT_INTO NAME LPAREN value_list RPAREN VALUES LPAREN value_list RPAREN SEMI
    (35) update_statement -> . UPDATE NAME SET NAME EQUALS NAME where_clause SEMI
    (36) update_statement -> . UPDATE NAME SET NAME EQUALS NUMB where_clause SEMI
    (37) delete_statement -> . DELETE_FROM NAME where_clause SEMI
    (38) create_table_statement -> . CREATE_TABLE NAME ( column_definitions )
    (51) alter_table_statement -> . ALTER_TABLE NAME add_drop_column SEMI

    SELECT          shift and go to state 8
    INSERT_INTO     shift and go to state 9
    UPDATE          shift and go to state 10
    DELETE_FROM     shift and go to state 11
    CREATE_TABLE    shift and go to state 12
    ALTER_TABLE     shift and go to state 13

    query                          shift and go to state 1
    select_statement               shift and go to state 2
    insert_statement               shift and go to state 3
    update_statement               shift and go to state 4
    delete_statement               shift and go to state 5
    create_table_statement         shift and go to state 6
    alter_table_statement          shift and go to state 7

state 1

    (0) S' -> query .



state 2

    (1) query -> select_statement .

    $end            reduce using rule 1 (query -> select_statement .)


state 3

    (2) query -> insert_statement .

    $end            reduce using rule 2 (query -> insert_statement .)


state 4

    (3) query -> update_statement .

    $end            reduce using rule 3 (query -> update_statement .)


state 5

    (4) query -> delete_statement .

    $end            reduce using rule 4 (query -> delete_statement .)


state 6

    (5) query -> create_table_statement .

    $end            reduce using rule 5 (query -> create_table_statement .)


state 7

    (6) query -> alter_table_statement .

    $end            reduce using rule 6 (query -> alter_table_statement .)


state 8

    (7) select_statement -> SELECT . selection FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI
    (8) selection -> . DISTINCT NAME
    (9) selection -> . TODO
    (10) selection -> . COUNT LPAREN NAME RPAREN
    (11) selection -> . COUNT LPAREN TODO RPAREN
    (12) selection -> . ASTERISK
    (13) selection -> . NAME

    DISTINCT        shift and go to state 16
    TODO            shift and go to state 17
    COUNT           shift and go to state 18
    ASTERISK        shift and go to state 19
    NAME            shift and go to state 15

    selection                      shift and go to state 14

state 9

    (29) insert_statement -> INSERT_INTO . NAME LPAREN value_list RPAREN VALUES LPAREN value_list RPAREN SEMI

    NAME            shift and go to state 20


state 10

    (35) update_statement -> UPDATE . NAME SET NAME EQUALS NAME where_clause SEMI
    (36) update_statement -> UPDATE . NAME SET NAME EQUALS NUMB where_clause SEMI

    NAME            shift and go to state 21


state 11

    (37) delete_statement -> DELETE_FROM . NAME where_clause SEMI

    NAME            shift and go to state 22


state 12

    (38) create_table_statement -> CREATE_TABLE . NAME ( column_definitions )

    NAME            shift and go to state 23


state 13

    (51) alter_table_statement -> ALTER_TABLE . NAME add_drop_column SEMI

    NAME            shift and go to state 24


state 14

    (7) select_statement -> SELECT selection . FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI

    FROM            shift and go to state 25


state 15

    (13) selection -> NAME .

    FROM            reduce using rule 13 (selection -> NAME .)


state 16

    (8) selection -> DISTINCT . NAME

    NAME            shift and go to state 26


state 17

    (9) selection -> TODO .

    FROM            reduce using rule 9 (selection -> TODO .)


state 18

    (10) selection -> COUNT . LPAREN NAME RPAREN
    (11) selection -> COUNT . LPAREN TODO RPAREN

    LPAREN          shift and go to state 27


state 19

    (12) selection -> ASTERISK .

    FROM            reduce using rule 12 (selection -> ASTERISK .)


state 20

    (29) insert_statement -> INSERT_INTO NAME . LPAREN value_list RPAREN VALUES LPAREN value_list RPAREN SEMI

    LPAREN          shift and go to state 28


state 21

    (35) update_statement -> UPDATE NAME . SET NAME EQUALS NAME where_clause SEMI
    (36) update_statement -> UPDATE NAME . SET NAME EQUALS NUMB where_clause SEMI

    SET             shift and go to state 29


state 22

    (37) delete_statement -> DELETE_FROM NAME . where_clause SEMI
    (19) where_clause -> . WHERE condition_list
    (20) where_clause -> . empty
    (67) empty -> .

    WHERE           shift and go to state 31
    SEMI            reduce using rule 67 (empty -> .)

    where_clause                   shift and go to state 30
    empty                          shift and go to state 32

state 23

    (38) create_table_statement -> CREATE_TABLE NAME . ( column_definitions )

    (               shift and go to state 33


state 24

    (51) alter_table_statement -> ALTER_TABLE NAME . add_drop_column SEMI
    (52) add_drop_column -> . ADD_COLUMN NAME type not_null_option
    (53) add_drop_column -> . DROP_COLUMN NAME

    ADD_COLUMN      shift and go to state 35
    DROP_COLUMN     shift and go to state 36

    add_drop_column                shift and go to state 34

state 25

    (7) select_statement -> SELECT selection FROM . NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI

    NAME            shift and go to state 37


state 26

    (8) selection -> DISTINCT NAME .

    FROM            reduce using rule 8 (selection -> DISTINCT NAME .)


state 27

    (10) selection -> COUNT LPAREN . NAME RPAREN
    (11) selection -> COUNT LPAREN . TODO RPAREN

    NAME            shift and go to state 38
    TODO            shift and go to state 39


state 28

    (29) insert_statement -> INSERT_INTO NAME LPAREN . value_list RPAREN VALUES LPAREN value_list RPAREN SEMI
    (30) value_list -> . value_list COMMA NAME
    (31) value_list -> . NAME COMMA NAME
    (32) value_list -> . NAME COMMA NUMB
    (33) value_list -> . NAME
    (34) value_list -> . NUMB

    NAME            shift and go to state 40
    NUMB            shift and go to state 42

    value_list                     shift and go to state 41

state 29

    (35) update_statement -> UPDATE NAME SET . NAME EQUALS NAME where_clause SEMI
    (36) update_statement -> UPDATE NAME SET . NAME EQUALS NUMB where_clause SEMI

    NAME            shift and go to state 43


state 30

    (37) delete_statement -> DELETE_FROM NAME where_clause . SEMI

    SEMI            shift and go to state 44


state 31

    (19) where_clause -> WHERE . condition_list
    (14) condition_list -> . condition
    (15) condition_list -> . condition AND condition_list
    (16) condition_list -> . condition OR condition_list
    (56) condition -> . NAME EQUALS NUMB
    (57) condition -> . NAME EQUALS NAME
    (58) condition -> . NAME BETWEEN NUMB AND NUMB
    (59) condition -> . NAME LIKE NAME
    (60) condition -> . NAME GREATER NUMB
    (61) condition -> . NAME IN ( value_list )
    (62) condition -> . NAME DOT NAME EQUALS NUMB
    (63) condition -> . NAME DOT NAME EQUALS NAME
    (64) condition -> . COUNT LPAREN TODO RPAREN GREATER NUMB
    (65) condition -> . NAME LESSER NUMB
    (66) condition -> . COUNT LPAREN TODO RPAREN LESSER NUMB

    NAME            shift and go to state 47
    COUNT           shift and go to state 48

    condition_list                 shift and go to state 45
    condition                      shift and go to state 46

state 32

    (20) where_clause -> empty .

    SEMI            reduce using rule 20 (where_clause -> empty .)
    GROUP_BY        reduce using rule 20 (where_clause -> empty .)
    HAVING          reduce using rule 20 (where_clause -> empty .)
    ORDER_BY        reduce using rule 20 (where_clause -> empty .)
    LIMIT           reduce using rule 20 (where_clause -> empty .)


state 33

    (38) create_table_statement -> CREATE_TABLE NAME ( . column_definitions )
    (39) column_definitions -> . column_definitions , column_definition
    (40) column_definitions -> . column_definition
    (41) column_definition -> . NAME type constraints

    NAME            shift and go to state 49

    column_definitions             shift and go to state 50
    column_definition              shift and go to state 51

state 34

    (51) alter_table_statement -> ALTER_TABLE NAME add_drop_column . SEMI

    SEMI            shift and go to state 52


state 35

    (52) add_drop_column -> ADD_COLUMN . NAME type not_null_option

    NAME            shift and go to state 53


state 36

    (53) add_drop_column -> DROP_COLUMN . NAME

    NAME            shift and go to state 54


state 37

    (7) select_statement -> SELECT selection FROM NAME . join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI
    (17) join_clause -> . JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME
    (18) join_clause -> . empty
    (67) empty -> .

    JOIN            shift and go to state 56
    WHERE           reduce using rule 67 (empty -> .)
    GROUP_BY        reduce using rule 67 (empty -> .)
    HAVING          reduce using rule 67 (empty -> .)
    ORDER_BY        reduce using rule 67 (empty -> .)
    LIMIT           reduce using rule 67 (empty -> .)
    SEMI            reduce using rule 67 (empty -> .)

    join_clause                    shift and go to state 55
    empty                          shift and go to state 57

state 38

    (10) selection -> COUNT LPAREN NAME . RPAREN

    RPAREN          shift and go to state 58


state 39

    (11) selection -> COUNT LPAREN TODO . RPAREN

    RPAREN          shift and go to state 59


state 40

    (31) value_list -> NAME . COMMA NAME
    (32) value_list -> NAME . COMMA NUMB
    (33) value_list -> NAME .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 60
    RPAREN          reduce using rule 33 (value_list -> NAME .)
    )               reduce using rule 33 (value_list -> NAME .)

  ! COMMA           [ reduce using rule 33 (value_list -> NAME .) ]


state 41

    (29) insert_statement -> INSERT_INTO NAME LPAREN value_list . RPAREN VALUES LPAREN value_list RPAREN SEMI
    (30) value_list -> value_list . COMMA NAME

    RPAREN          shift and go to state 61
    COMMA           shift and go to state 62


state 42

    (34) value_list -> NUMB .

    RPAREN          reduce using rule 34 (value_list -> NUMB .)
    COMMA           reduce using rule 34 (value_list -> NUMB .)
    )               reduce using rule 34 (value_list -> NUMB .)


state 43

    (35) update_statement -> UPDATE NAME SET NAME . EQUALS NAME where_clause SEMI
    (36) update_statement -> UPDATE NAME SET NAME . EQUALS NUMB where_clause SEMI

    EQUALS          shift and go to state 63


state 44

    (37) delete_statement -> DELETE_FROM NAME where_clause SEMI .

    $end            reduce using rule 37 (delete_statement -> DELETE_FROM NAME where_clause SEMI .)


state 45

    (19) where_clause -> WHERE condition_list .

    SEMI            reduce using rule 19 (where_clause -> WHERE condition_list .)
    GROUP_BY        reduce using rule 19 (where_clause -> WHERE condition_list .)
    HAVING          reduce using rule 19 (where_clause -> WHERE condition_list .)
    ORDER_BY        reduce using rule 19 (where_clause -> WHERE condition_list .)
    LIMIT           reduce using rule 19 (where_clause -> WHERE condition_list .)


state 46

    (14) condition_list -> condition .
    (15) condition_list -> condition . AND condition_list
    (16) condition_list -> condition . OR condition_list

    SEMI            reduce using rule 14 (condition_list -> condition .)
    GROUP_BY        reduce using rule 14 (condition_list -> condition .)
    HAVING          reduce using rule 14 (condition_list -> condition .)
    ORDER_BY        reduce using rule 14 (condition_list -> condition .)
    LIMIT           reduce using rule 14 (condition_list -> condition .)
    AND             shift and go to state 64
    OR              shift and go to state 65


state 47

    (56) condition -> NAME . EQUALS NUMB
    (57) condition -> NAME . EQUALS NAME
    (58) condition -> NAME . BETWEEN NUMB AND NUMB
    (59) condition -> NAME . LIKE NAME
    (60) condition -> NAME . GREATER NUMB
    (61) condition -> NAME . IN ( value_list )
    (62) condition -> NAME . DOT NAME EQUALS NUMB
    (63) condition -> NAME . DOT NAME EQUALS NAME
    (65) condition -> NAME . LESSER NUMB

    EQUALS          shift and go to state 66
    BETWEEN         shift and go to state 67
    LIKE            shift and go to state 68
    GREATER         shift and go to state 69
    IN              shift and go to state 70
    DOT             shift and go to state 71
    LESSER          shift and go to state 72


state 48

    (64) condition -> COUNT . LPAREN TODO RPAREN GREATER NUMB
    (66) condition -> COUNT . LPAREN TODO RPAREN LESSER NUMB

    LPAREN          shift and go to state 73


state 49

    (41) column_definition -> NAME . type constraints
    (42) type -> . NAME
    (43) type -> . VARCHAR LPAREN NUMB RPAREN

    NAME            shift and go to state 74
    VARCHAR         shift and go to state 76

    type                           shift and go to state 75

state 50

    (38) create_table_statement -> CREATE_TABLE NAME ( column_definitions . )
    (39) column_definitions -> column_definitions . , column_definition

    )               shift and go to state 77
    ,               shift and go to state 78


state 51

    (40) column_definitions -> column_definition .

    )               reduce using rule 40 (column_definitions -> column_definition .)
    ,               reduce using rule 40 (column_definitions -> column_definition .)


state 52

    (51) alter_table_statement -> ALTER_TABLE NAME add_drop_column SEMI .

    $end            reduce using rule 51 (alter_table_statement -> ALTER_TABLE NAME add_drop_column SEMI .)


state 53

    (52) add_drop_column -> ADD_COLUMN NAME . type not_null_option
    (42) type -> . NAME
    (43) type -> . VARCHAR LPAREN NUMB RPAREN

    NAME            shift and go to state 74
    VARCHAR         shift and go to state 76

    type                           shift and go to state 79

state 54

    (53) add_drop_column -> DROP_COLUMN NAME .

    SEMI            reduce using rule 53 (add_drop_column -> DROP_COLUMN NAME .)


state 55

    (7) select_statement -> SELECT selection FROM NAME join_clause . where_clause group_by_clause having_clause order_by_clause limit_clause SEMI
    (19) where_clause -> . WHERE condition_list
    (20) where_clause -> . empty
    (67) empty -> .

    WHERE           shift and go to state 31
    GROUP_BY        reduce using rule 67 (empty -> .)
    HAVING          reduce using rule 67 (empty -> .)
    ORDER_BY        reduce using rule 67 (empty -> .)
    LIMIT           reduce using rule 67 (empty -> .)
    SEMI            reduce using rule 67 (empty -> .)

    where_clause                   shift and go to state 80
    empty                          shift and go to state 32

state 56

    (17) join_clause -> JOIN . NAME ON NAME DOT NAME EQUALS NAME DOT NAME

    NAME            shift and go to state 81


state 57

    (18) join_clause -> empty .

    WHERE           reduce using rule 18 (join_clause -> empty .)
    GROUP_BY        reduce using rule 18 (join_clause -> empty .)
    HAVING          reduce using rule 18 (join_clause -> empty .)
    ORDER_BY        reduce using rule 18 (join_clause -> empty .)
    LIMIT           reduce using rule 18 (join_clause -> empty .)
    SEMI            reduce using rule 18 (join_clause -> empty .)


state 58

    (10) selection -> COUNT LPAREN NAME RPAREN .

    FROM            reduce using rule 10 (selection -> COUNT LPAREN NAME RPAREN .)


state 59

    (11) selection -> COUNT LPAREN TODO RPAREN .

    FROM            reduce using rule 11 (selection -> COUNT LPAREN TODO RPAREN .)


state 60

    (31) value_list -> NAME COMMA . NAME
    (32) value_list -> NAME COMMA . NUMB

    NAME            shift and go to state 82
    NUMB            shift and go to state 83


state 61

    (29) insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN . VALUES LPAREN value_list RPAREN SEMI

    VALUES          shift and go to state 84


state 62

    (30) value_list -> value_list COMMA . NAME

    NAME            shift and go to state 85


state 63

    (35) update_statement -> UPDATE NAME SET NAME EQUALS . NAME where_clause SEMI
    (36) update_statement -> UPDATE NAME SET NAME EQUALS . NUMB where_clause SEMI

    NAME            shift and go to state 86
    NUMB            shift and go to state 87


state 64

    (15) condition_list -> condition AND . condition_list
    (14) condition_list -> . condition
    (15) condition_list -> . condition AND condition_list
    (16) condition_list -> . condition OR condition_list
    (56) condition -> . NAME EQUALS NUMB
    (57) condition -> . NAME EQUALS NAME
    (58) condition -> . NAME BETWEEN NUMB AND NUMB
    (59) condition -> . NAME LIKE NAME
    (60) condition -> . NAME GREATER NUMB
    (61) condition -> . NAME IN ( value_list )
    (62) condition -> . NAME DOT NAME EQUALS NUMB
    (63) condition -> . NAME DOT NAME EQUALS NAME
    (64) condition -> . COUNT LPAREN TODO RPAREN GREATER NUMB
    (65) condition -> . NAME LESSER NUMB
    (66) condition -> . COUNT LPAREN TODO RPAREN LESSER NUMB

    NAME            shift and go to state 47
    COUNT           shift and go to state 48

    condition                      shift and go to state 46
    condition_list                 shift and go to state 88

state 65

    (16) condition_list -> condition OR . condition_list
    (14) condition_list -> . condition
    (15) condition_list -> . condition AND condition_list
    (16) condition_list -> . condition OR condition_list
    (56) condition -> . NAME EQUALS NUMB
    (57) condition -> . NAME EQUALS NAME
    (58) condition -> . NAME BETWEEN NUMB AND NUMB
    (59) condition -> . NAME LIKE NAME
    (60) condition -> . NAME GREATER NUMB
    (61) condition -> . NAME IN ( value_list )
    (62) condition -> . NAME DOT NAME EQUALS NUMB
    (63) condition -> . NAME DOT NAME EQUALS NAME
    (64) condition -> . COUNT LPAREN TODO RPAREN GREATER NUMB
    (65) condition -> . NAME LESSER NUMB
    (66) condition -> . COUNT LPAREN TODO RPAREN LESSER NUMB

    NAME            shift and go to state 47
    COUNT           shift and go to state 48

    condition                      shift and go to state 46
    condition_list                 shift and go to state 89

state 66

    (56) condition -> NAME EQUALS . NUMB
    (57) condition -> NAME EQUALS . NAME

    NUMB            shift and go to state 91
    NAME            shift and go to state 90


state 67

    (58) condition -> NAME BETWEEN . NUMB AND NUMB

    NUMB            shift and go to state 92


state 68

    (59) condition -> NAME LIKE . NAME

    NAME            shift and go to state 93


state 69

    (60) condition -> NAME GREATER . NUMB

    NUMB            shift and go to state 94


state 70

    (61) condition -> NAME IN . ( value_list )

    (               shift and go to state 95


state 71

    (62) condition -> NAME DOT . NAME EQUALS NUMB
    (63) condition -> NAME DOT . NAME EQUALS NAME

    NAME            shift and go to state 96


state 72

    (65) condition -> NAME LESSER . NUMB

    NUMB            shift and go to state 97


state 73

    (64) condition -> COUNT LPAREN . TODO RPAREN GREATER NUMB
    (66) condition -> COUNT LPAREN . TODO RPAREN LESSER NUMB

    TODO            shift and go to state 98


state 74

    (42) type -> NAME .

    NOT_NULL        reduce using rule 42 (type -> NAME .)
    UNIQUE          reduce using rule 42 (type -> NAME .)
    PRIMARY_KEY     reduce using rule 42 (type -> NAME .)
    FOREIGN_KEY     reduce using rule 42 (type -> NAME .)
    DEFAULT         reduce using rule 42 (type -> NAME .)
    )               reduce using rule 42 (type -> NAME .)
    ,               reduce using rule 42 (type -> NAME .)
    SEMI            reduce using rule 42 (type -> NAME .)


state 75

    (41) column_definition -> NAME type . constraints
    (44) constraints -> . constraints constraint
    (45) constraints -> . empty
    (67) empty -> .

    NOT_NULL        reduce using rule 67 (empty -> .)
    UNIQUE          reduce using rule 67 (empty -> .)
    PRIMARY_KEY     reduce using rule 67 (empty -> .)
    FOREIGN_KEY     reduce using rule 67 (empty -> .)
    DEFAULT         reduce using rule 67 (empty -> .)
    )               reduce using rule 67 (empty -> .)
    ,               reduce using rule 67 (empty -> .)

    constraints                    shift and go to state 99
    empty                          shift and go to state 100

state 76

    (43) type -> VARCHAR . LPAREN NUMB RPAREN

    LPAREN          shift and go to state 101


state 77

    (38) create_table_statement -> CREATE_TABLE NAME ( column_definitions ) .

    $end            reduce using rule 38 (create_table_statement -> CREATE_TABLE NAME ( column_definitions ) .)


state 78

    (39) column_definitions -> column_definitions , . column_definition
    (41) column_definition -> . NAME type constraints

    NAME            shift and go to state 49

    column_definition              shift and go to state 102

state 79

    (52) add_drop_column -> ADD_COLUMN NAME type . not_null_option
    (54) not_null_option -> . NOT_NULL
    (55) not_null_option -> . empty
    (67) empty -> .

    NOT_NULL        shift and go to state 104
    SEMI            reduce using rule 67 (empty -> .)

    not_null_option                shift and go to state 103
    empty                          shift and go to state 105

state 80

    (7) select_statement -> SELECT selection FROM NAME join_clause where_clause . group_by_clause having_clause order_by_clause limit_clause SEMI
    (21) group_by_clause -> . GROUP_BY NAME
    (22) group_by_clause -> . empty
    (67) empty -> .

    GROUP_BY        shift and go to state 107
    HAVING          reduce using rule 67 (empty -> .)
    ORDER_BY        reduce using rule 67 (empty -> .)
    LIMIT           reduce using rule 67 (empty -> .)
    SEMI            reduce using rule 67 (empty -> .)

    group_by_clause                shift and go to state 106
    empty                          shift and go to state 108

state 81

    (17) join_clause -> JOIN NAME . ON NAME DOT NAME EQUALS NAME DOT NAME

    ON              shift and go to state 109


state 82

    (31) value_list -> NAME COMMA NAME .

    RPAREN          reduce using rule 31 (value_list -> NAME COMMA NAME .)
    COMMA           reduce using rule 31 (value_list -> NAME COMMA NAME .)
    )               reduce using rule 31 (value_list -> NAME COMMA NAME .)


state 83

    (32) value_list -> NAME COMMA NUMB .

    RPAREN          reduce using rule 32 (value_list -> NAME COMMA NUMB .)
    COMMA           reduce using rule 32 (value_list -> NAME COMMA NUMB .)
    )               reduce using rule 32 (value_list -> NAME COMMA NUMB .)


state 84

    (29) insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN VALUES . LPAREN value_list RPAREN SEMI

    LPAREN          shift and go to state 110


state 85

    (30) value_list -> value_list COMMA NAME .

    RPAREN          reduce using rule 30 (value_list -> value_list COMMA NAME .)
    COMMA           reduce using rule 30 (value_list -> value_list COMMA NAME .)
    )               reduce using rule 30 (value_list -> value_list COMMA NAME .)


state 86

    (35) update_statement -> UPDATE NAME SET NAME EQUALS NAME . where_clause SEMI
    (19) where_clause -> . WHERE condition_list
    (20) where_clause -> . empty
    (67) empty -> .

    WHERE           shift and go to state 31
    SEMI            reduce using rule 67 (empty -> .)

    where_clause                   shift and go to state 111
    empty                          shift and go to state 32

state 87

    (36) update_statement -> UPDATE NAME SET NAME EQUALS NUMB . where_clause SEMI
    (19) where_clause -> . WHERE condition_list
    (20) where_clause -> . empty
    (67) empty -> .

    WHERE           shift and go to state 31
    SEMI            reduce using rule 67 (empty -> .)

    where_clause                   shift and go to state 112
    empty                          shift and go to state 32

state 88

    (15) condition_list -> condition AND condition_list .

    SEMI            reduce using rule 15 (condition_list -> condition AND condition_list .)
    GROUP_BY        reduce using rule 15 (condition_list -> condition AND condition_list .)
    HAVING          reduce using rule 15 (condition_list -> condition AND condition_list .)
    ORDER_BY        reduce using rule 15 (condition_list -> condition AND condition_list .)
    LIMIT           reduce using rule 15 (condition_list -> condition AND condition_list .)


state 89

    (16) condition_list -> condition OR condition_list .

    SEMI            reduce using rule 16 (condition_list -> condition OR condition_list .)
    GROUP_BY        reduce using rule 16 (condition_list -> condition OR condition_list .)
    HAVING          reduce using rule 16 (condition_list -> condition OR condition_list .)
    ORDER_BY        reduce using rule 16 (condition_list -> condition OR condition_list .)
    LIMIT           reduce using rule 16 (condition_list -> condition OR condition_list .)


state 90

    (57) condition -> NAME EQUALS NAME .

    AND             reduce using rule 57 (condition -> NAME EQUALS NAME .)
    OR              reduce using rule 57 (condition -> NAME EQUALS NAME .)
    SEMI            reduce using rule 57 (condition -> NAME EQUALS NAME .)
    GROUP_BY        reduce using rule 57 (condition -> NAME EQUALS NAME .)
    HAVING          reduce using rule 57 (condition -> NAME EQUALS NAME .)
    ORDER_BY        reduce using rule 57 (condition -> NAME EQUALS NAME .)
    LIMIT           reduce using rule 57 (condition -> NAME EQUALS NAME .)


state 91

    (56) condition -> NAME EQUALS NUMB .

    AND             reduce using rule 56 (condition -> NAME EQUALS NUMB .)
    OR              reduce using rule 56 (condition -> NAME EQUALS NUMB .)
    SEMI            reduce using rule 56 (condition -> NAME EQUALS NUMB .)
    GROUP_BY        reduce using rule 56 (condition -> NAME EQUALS NUMB .)
    HAVING          reduce using rule 56 (condition -> NAME EQUALS NUMB .)
    ORDER_BY        reduce using rule 56 (condition -> NAME EQUALS NUMB .)
    LIMIT           reduce using rule 56 (condition -> NAME EQUALS NUMB .)


state 92

    (58) condition -> NAME BETWEEN NUMB . AND NUMB

    AND             shift and go to state 113


state 93

    (59) condition -> NAME LIKE NAME .

    AND             reduce using rule 59 (condition -> NAME LIKE NAME .)
    OR              reduce using rule 59 (condition -> NAME LIKE NAME .)
    SEMI            reduce using rule 59 (condition -> NAME LIKE NAME .)
    GROUP_BY        reduce using rule 59 (condition -> NAME LIKE NAME .)
    HAVING          reduce using rule 59 (condition -> NAME LIKE NAME .)
    ORDER_BY        reduce using rule 59 (condition -> NAME LIKE NAME .)
    LIMIT           reduce using rule 59 (condition -> NAME LIKE NAME .)


state 94

    (60) condition -> NAME GREATER NUMB .

    AND             reduce using rule 60 (condition -> NAME GREATER NUMB .)
    OR              reduce using rule 60 (condition -> NAME GREATER NUMB .)
    SEMI            reduce using rule 60 (condition -> NAME GREATER NUMB .)
    GROUP_BY        reduce using rule 60 (condition -> NAME GREATER NUMB .)
    HAVING          reduce using rule 60 (condition -> NAME GREATER NUMB .)
    ORDER_BY        reduce using rule 60 (condition -> NAME GREATER NUMB .)
    LIMIT           reduce using rule 60 (condition -> NAME GREATER NUMB .)


state 95

    (61) condition -> NAME IN ( . value_list )
    (30) value_list -> . value_list COMMA NAME
    (31) value_list -> . NAME COMMA NAME
    (32) value_list -> . NAME COMMA NUMB
    (33) value_list -> . NAME
    (34) value_list -> . NUMB

    NAME            shift and go to state 40
    NUMB            shift and go to state 42

    value_list                     shift and go to state 114

state 96

    (62) condition -> NAME DOT NAME . EQUALS NUMB
    (63) condition -> NAME DOT NAME . EQUALS NAME

    EQUALS          shift and go to state 115


state 97

    (65) condition -> NAME LESSER NUMB .

    AND             reduce using rule 65 (condition -> NAME LESSER NUMB .)
    OR              reduce using rule 65 (condition -> NAME LESSER NUMB .)
    SEMI            reduce using rule 65 (condition -> NAME LESSER NUMB .)
    GROUP_BY        reduce using rule 65 (condition -> NAME LESSER NUMB .)
    HAVING          reduce using rule 65 (condition -> NAME LESSER NUMB .)
    ORDER_BY        reduce using rule 65 (condition -> NAME LESSER NUMB .)
    LIMIT           reduce using rule 65 (condition -> NAME LESSER NUMB .)


state 98

    (64) condition -> COUNT LPAREN TODO . RPAREN GREATER NUMB
    (66) condition -> COUNT LPAREN TODO . RPAREN LESSER NUMB

    RPAREN          shift and go to state 116


state 99

    (41) column_definition -> NAME type constraints .
    (44) constraints -> constraints . constraint
    (46) constraint -> . NOT_NULL
    (47) constraint -> . UNIQUE
    (48) constraint -> . PRIMARY_KEY
    (49) constraint -> . FOREIGN_KEY
    (50) constraint -> . DEFAULT NAME

    )               reduce using rule 41 (column_definition -> NAME type constraints .)
    ,               reduce using rule 41 (column_definition -> NAME type constraints .)
    NOT_NULL        shift and go to state 118
    UNIQUE          shift and go to state 119
    PRIMARY_KEY     shift and go to state 120
    FOREIGN_KEY     shift and go to state 121
    DEFAULT         shift and go to state 122

    constraint                     shift and go to state 117

state 100

    (45) constraints -> empty .

    NOT_NULL        reduce using rule 45 (constraints -> empty .)
    UNIQUE          reduce using rule 45 (constraints -> empty .)
    PRIMARY_KEY     reduce using rule 45 (constraints -> empty .)
    FOREIGN_KEY     reduce using rule 45 (constraints -> empty .)
    DEFAULT         reduce using rule 45 (constraints -> empty .)
    )               reduce using rule 45 (constraints -> empty .)
    ,               reduce using rule 45 (constraints -> empty .)


state 101

    (43) type -> VARCHAR LPAREN . NUMB RPAREN

    NUMB            shift and go to state 123


state 102

    (39) column_definitions -> column_definitions , column_definition .

    )               reduce using rule 39 (column_definitions -> column_definitions , column_definition .)
    ,               reduce using rule 39 (column_definitions -> column_definitions , column_definition .)


state 103

    (52) add_drop_column -> ADD_COLUMN NAME type not_null_option .

    SEMI            reduce using rule 52 (add_drop_column -> ADD_COLUMN NAME type not_null_option .)


state 104

    (54) not_null_option -> NOT_NULL .

    SEMI            reduce using rule 54 (not_null_option -> NOT_NULL .)


state 105

    (55) not_null_option -> empty .

    SEMI            reduce using rule 55 (not_null_option -> empty .)


state 106

    (7) select_statement -> SELECT selection FROM NAME join_clause where_clause group_by_clause . having_clause order_by_clause limit_clause SEMI
    (23) having_clause -> . HAVING condition
    (24) having_clause -> . empty
    (67) empty -> .

    HAVING          shift and go to state 125
    ORDER_BY        reduce using rule 67 (empty -> .)
    LIMIT           reduce using rule 67 (empty -> .)
    SEMI            reduce using rule 67 (empty -> .)

    having_clause                  shift and go to state 124
    empty                          shift and go to state 126

state 107

    (21) group_by_clause -> GROUP_BY . NAME

    NAME            shift and go to state 127


state 108

    (22) group_by_clause -> empty .

    HAVING          reduce using rule 22 (group_by_clause -> empty .)
    ORDER_BY        reduce using rule 22 (group_by_clause -> empty .)
    LIMIT           reduce using rule 22 (group_by_clause -> empty .)
    SEMI            reduce using rule 22 (group_by_clause -> empty .)


state 109

    (17) join_clause -> JOIN NAME ON . NAME DOT NAME EQUALS NAME DOT NAME

    NAME            shift and go to state 128


state 110

    (29) insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN VALUES LPAREN . value_list RPAREN SEMI
    (30) value_list -> . value_list COMMA NAME
    (31) value_list -> . NAME COMMA NAME
    (32) value_list -> . NAME COMMA NUMB
    (33) value_list -> . NAME
    (34) value_list -> . NUMB

    NAME            shift and go to state 40
    NUMB            shift and go to state 42

    value_list                     shift and go to state 129

state 111

    (35) update_statement -> UPDATE NAME SET NAME EQUALS NAME where_clause . SEMI

    SEMI            shift and go to state 130


state 112

    (36) update_statement -> UPDATE NAME SET NAME EQUALS NUMB where_clause . SEMI

    SEMI            shift and go to state 131


state 113

    (58) condition -> NAME BETWEEN NUMB AND . NUMB

    NUMB            shift and go to state 132


state 114

    (61) condition -> NAME IN ( value_list . )
    (30) value_list -> value_list . COMMA NAME

    )               shift and go to state 133
    COMMA           shift and go to state 62


state 115

    (62) condition -> NAME DOT NAME EQUALS . NUMB
    (63) condition -> NAME DOT NAME EQUALS . NAME

    NUMB            shift and go to state 135
    NAME            shift and go to state 134


state 116

    (64) condition -> COUNT LPAREN TODO RPAREN . GREATER NUMB
    (66) condition -> COUNT LPAREN TODO RPAREN . LESSER NUMB

    GREATER         shift and go to state 136
    LESSER          shift and go to state 137


state 117

    (44) constraints -> constraints constraint .

    NOT_NULL        reduce using rule 44 (constraints -> constraints constraint .)
    UNIQUE          reduce using rule 44 (constraints -> constraints constraint .)
    PRIMARY_KEY     reduce using rule 44 (constraints -> constraints constraint .)
    FOREIGN_KEY     reduce using rule 44 (constraints -> constraints constraint .)
    DEFAULT         reduce using rule 44 (constraints -> constraints constraint .)
    )               reduce using rule 44 (constraints -> constraints constraint .)
    ,               reduce using rule 44 (constraints -> constraints constraint .)


state 118

    (46) constraint -> NOT_NULL .

    NOT_NULL        reduce using rule 46 (constraint -> NOT_NULL .)
    UNIQUE          reduce using rule 46 (constraint -> NOT_NULL .)
    PRIMARY_KEY     reduce using rule 46 (constraint -> NOT_NULL .)
    FOREIGN_KEY     reduce using rule 46 (constraint -> NOT_NULL .)
    DEFAULT         reduce using rule 46 (constraint -> NOT_NULL .)
    )               reduce using rule 46 (constraint -> NOT_NULL .)
    ,               reduce using rule 46 (constraint -> NOT_NULL .)


state 119

    (47) constraint -> UNIQUE .

    NOT_NULL        reduce using rule 47 (constraint -> UNIQUE .)
    UNIQUE          reduce using rule 47 (constraint -> UNIQUE .)
    PRIMARY_KEY     reduce using rule 47 (constraint -> UNIQUE .)
    FOREIGN_KEY     reduce using rule 47 (constraint -> UNIQUE .)
    DEFAULT         reduce using rule 47 (constraint -> UNIQUE .)
    )               reduce using rule 47 (constraint -> UNIQUE .)
    ,               reduce using rule 47 (constraint -> UNIQUE .)


state 120

    (48) constraint -> PRIMARY_KEY .

    NOT_NULL        reduce using rule 48 (constraint -> PRIMARY_KEY .)
    UNIQUE          reduce using rule 48 (constraint -> PRIMARY_KEY .)
    PRIMARY_KEY     reduce using rule 48 (constraint -> PRIMARY_KEY .)
    FOREIGN_KEY     reduce using rule 48 (constraint -> PRIMARY_KEY .)
    DEFAULT         reduce using rule 48 (constraint -> PRIMARY_KEY .)
    )               reduce using rule 48 (constraint -> PRIMARY_KEY .)
    ,               reduce using rule 48 (constraint -> PRIMARY_KEY .)


state 121

    (49) constraint -> FOREIGN_KEY .

    NOT_NULL        reduce using rule 49 (constraint -> FOREIGN_KEY .)
    UNIQUE          reduce using rule 49 (constraint -> FOREIGN_KEY .)
    PRIMARY_KEY     reduce using rule 49 (constraint -> FOREIGN_KEY .)
    FOREIGN_KEY     reduce using rule 49 (constraint -> FOREIGN_KEY .)
    DEFAULT         reduce using rule 49 (constraint -> FOREIGN_KEY .)
    )               reduce using rule 49 (constraint -> FOREIGN_KEY .)
    ,               reduce using rule 49 (constraint -> FOREIGN_KEY .)


state 122

    (50) constraint -> DEFAULT . NAME

    NAME            shift and go to state 138


state 123

    (43) type -> VARCHAR LPAREN NUMB . RPAREN

    RPAREN          shift and go to state 139


state 124

    (7) select_statement -> SELECT selection FROM NAME join_clause where_clause group_by_clause having_clause . order_by_clause limit_clause SEMI
    (25) order_by_clause -> . ORDER_BY NAME
    (26) order_by_clause -> . empty
    (67) empty -> .

    ORDER_BY        shift and go to state 141
    LIMIT           reduce using rule 67 (empty -> .)
    SEMI            reduce using rule 67 (empty -> .)

    order_by_clause                shift and go to state 140
    empty                          shift and go to state 142

state 125

    (23) having_clause -> HAVING . condition
    (56) condition -> . NAME EQUALS NUMB
    (57) condition -> . NAME EQUALS NAME
    (58) condition -> . NAME BETWEEN NUMB AND NUMB
    (59) condition -> . NAME LIKE NAME
    (60) condition -> . NAME GREATER NUMB
    (61) condition -> . NAME IN ( value_list )
    (62) condition -> . NAME DOT NAME EQUALS NUMB
    (63) condition -> . NAME DOT NAME EQUALS NAME
    (64) condition -> . COUNT LPAREN TODO RPAREN GREATER NUMB
    (65) condition -> . NAME LESSER NUMB
    (66) condition -> . COUNT LPAREN TODO RPAREN LESSER NUMB

    NAME            shift and go to state 47
    COUNT           shift and go to state 48

    condition                      shift and go to state 143

state 126

    (24) having_clause -> empty .

    ORDER_BY        reduce using rule 24 (having_clause -> empty .)
    LIMIT           reduce using rule 24 (having_clause -> empty .)
    SEMI            reduce using rule 24 (having_clause -> empty .)


state 127

    (21) group_by_clause -> GROUP_BY NAME .

    HAVING          reduce using rule 21 (group_by_clause -> GROUP_BY NAME .)
    ORDER_BY        reduce using rule 21 (group_by_clause -> GROUP_BY NAME .)
    LIMIT           reduce using rule 21 (group_by_clause -> GROUP_BY NAME .)
    SEMI            reduce using rule 21 (group_by_clause -> GROUP_BY NAME .)


state 128

    (17) join_clause -> JOIN NAME ON NAME . DOT NAME EQUALS NAME DOT NAME

    DOT             shift and go to state 144


state 129

    (29) insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN VALUES LPAREN value_list . RPAREN SEMI
    (30) value_list -> value_list . COMMA NAME

    RPAREN          shift and go to state 145
    COMMA           shift and go to state 62


state 130

    (35) update_statement -> UPDATE NAME SET NAME EQUALS NAME where_clause SEMI .

    $end            reduce using rule 35 (update_statement -> UPDATE NAME SET NAME EQUALS NAME where_clause SEMI .)


state 131

    (36) update_statement -> UPDATE NAME SET NAME EQUALS NUMB where_clause SEMI .

    $end            reduce using rule 36 (update_statement -> UPDATE NAME SET NAME EQUALS NUMB where_clause SEMI .)


state 132

    (58) condition -> NAME BETWEEN NUMB AND NUMB .

    AND             reduce using rule 58 (condition -> NAME BETWEEN NUMB AND NUMB .)
    OR              reduce using rule 58 (condition -> NAME BETWEEN NUMB AND NUMB .)
    SEMI            reduce using rule 58 (condition -> NAME BETWEEN NUMB AND NUMB .)
    GROUP_BY        reduce using rule 58 (condition -> NAME BETWEEN NUMB AND NUMB .)
    HAVING          reduce using rule 58 (condition -> NAME BETWEEN NUMB AND NUMB .)
    ORDER_BY        reduce using rule 58 (condition -> NAME BETWEEN NUMB AND NUMB .)
    LIMIT           reduce using rule 58 (condition -> NAME BETWEEN NUMB AND NUMB .)


state 133

    (61) condition -> NAME IN ( value_list ) .

    AND             reduce using rule 61 (condition -> NAME IN ( value_list ) .)
    OR              reduce using rule 61 (condition -> NAME IN ( value_list ) .)
    SEMI            reduce using rule 61 (condition -> NAME IN ( value_list ) .)
    GROUP_BY        reduce using rule 61 (condition -> NAME IN ( value_list ) .)
    HAVING          reduce using rule 61 (condition -> NAME IN ( value_list ) .)
    ORDER_BY        reduce using rule 61 (condition -> NAME IN ( value_list ) .)
    LIMIT           reduce using rule 61 (condition -> NAME IN ( value_list ) .)


state 134

    (63) condition -> NAME DOT NAME EQUALS NAME .

    AND             reduce using rule 63 (condition -> NAME DOT NAME EQUALS NAME .)
    OR              reduce using rule 63 (condition -> NAME DOT NAME EQUALS NAME .)
    SEMI            reduce using rule 63 (condition -> NAME DOT NAME EQUALS NAME .)
    GROUP_BY        reduce using rule 63 (condition -> NAME DOT NAME EQUALS NAME .)
    HAVING          reduce using rule 63 (condition -> NAME DOT NAME EQUALS NAME .)
    ORDER_BY        reduce using rule 63 (condition -> NAME DOT NAME EQUALS NAME .)
    LIMIT           reduce using rule 63 (condition -> NAME DOT NAME EQUALS NAME .)


state 135

    (62) condition -> NAME DOT NAME EQUALS NUMB .

    AND             reduce using rule 62 (condition -> NAME DOT NAME EQUALS NUMB .)
    OR              reduce using rule 62 (condition -> NAME DOT NAME EQUALS NUMB .)
    SEMI            reduce using rule 62 (condition -> NAME DOT NAME EQUALS NUMB .)
    GROUP_BY        reduce using rule 62 (condition -> NAME DOT NAME EQUALS NUMB .)
    HAVING          reduce using rule 62 (condition -> NAME DOT NAME EQUALS NUMB .)
    ORDER_BY        reduce using rule 62 (condition -> NAME DOT NAME EQUALS NUMB .)
    LIMIT           reduce using rule 62 (condition -> NAME DOT NAME EQUALS NUMB .)


state 136

    (64) condition -> COUNT LPAREN TODO RPAREN GREATER . NUMB

    NUMB            shift and go to state 146


state 137

    (66) condition -> COUNT LPAREN TODO RPAREN LESSER . NUMB

    NUMB            shift and go to state 147


state 138

    (50) constraint -> DEFAULT NAME .

    NOT_NULL        reduce using rule 50 (constraint -> DEFAULT NAME .)
    UNIQUE          reduce using rule 50 (constraint -> DEFAULT NAME .)
    PRIMARY_KEY     reduce using rule 50 (constraint -> DEFAULT NAME .)
    FOREIGN_KEY     reduce using rule 50 (constraint -> DEFAULT NAME .)
    DEFAULT         reduce using rule 50 (constraint -> DEFAULT NAME .)
    )               reduce using rule 50 (constraint -> DEFAULT NAME .)
    ,               reduce using rule 50 (constraint -> DEFAULT NAME .)


state 139

    (43) type -> VARCHAR LPAREN NUMB RPAREN .

    NOT_NULL        reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)
    UNIQUE          reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)
    PRIMARY_KEY     reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)
    FOREIGN_KEY     reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)
    DEFAULT         reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)
    )               reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)
    ,               reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)
    SEMI            reduce using rule 43 (type -> VARCHAR LPAREN NUMB RPAREN .)


state 140

    (7) select_statement -> SELECT selection FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause . limit_clause SEMI
    (27) limit_clause -> . LIMIT NUMB
    (28) limit_clause -> . empty
    (67) empty -> .

    LIMIT           shift and go to state 149
    SEMI            reduce using rule 67 (empty -> .)

    limit_clause                   shift and go to state 148
    empty                          shift and go to state 150

state 141

    (25) order_by_clause -> ORDER_BY . NAME

    NAME            shift and go to state 151


state 142

    (26) order_by_clause -> empty .

    LIMIT           reduce using rule 26 (order_by_clause -> empty .)
    SEMI            reduce using rule 26 (order_by_clause -> empty .)


state 143

    (23) having_clause -> HAVING condition .

    ORDER_BY        reduce using rule 23 (having_clause -> HAVING condition .)
    LIMIT           reduce using rule 23 (having_clause -> HAVING condition .)
    SEMI            reduce using rule 23 (having_clause -> HAVING condition .)


state 144

    (17) join_clause -> JOIN NAME ON NAME DOT . NAME EQUALS NAME DOT NAME

    NAME            shift and go to state 152


state 145

    (29) insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN VALUES LPAREN value_list RPAREN . SEMI

    SEMI            shift and go to state 153


state 146

    (64) condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .

    AND             reduce using rule 64 (condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .)
    OR              reduce using rule 64 (condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .)
    SEMI            reduce using rule 64 (condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .)
    GROUP_BY        reduce using rule 64 (condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .)
    HAVING          reduce using rule 64 (condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .)
    ORDER_BY        reduce using rule 64 (condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .)
    LIMIT           reduce using rule 64 (condition -> COUNT LPAREN TODO RPAREN GREATER NUMB .)


state 147

    (66) condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .

    AND             reduce using rule 66 (condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .)
    OR              reduce using rule 66 (condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .)
    SEMI            reduce using rule 66 (condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .)
    GROUP_BY        reduce using rule 66 (condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .)
    HAVING          reduce using rule 66 (condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .)
    ORDER_BY        reduce using rule 66 (condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .)
    LIMIT           reduce using rule 66 (condition -> COUNT LPAREN TODO RPAREN LESSER NUMB .)


state 148

    (7) select_statement -> SELECT selection FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause . SEMI

    SEMI            shift and go to state 154


state 149

    (27) limit_clause -> LIMIT . NUMB

    NUMB            shift and go to state 155


state 150

    (28) limit_clause -> empty .

    SEMI            reduce using rule 28 (limit_clause -> empty .)


state 151

    (25) order_by_clause -> ORDER_BY NAME .

    LIMIT           reduce using rule 25 (order_by_clause -> ORDER_BY NAME .)
    SEMI            reduce using rule 25 (order_by_clause -> ORDER_BY NAME .)


state 152

    (17) join_clause -> JOIN NAME ON NAME DOT NAME . EQUALS NAME DOT NAME

    EQUALS          shift and go to state 156


state 153

    (29) insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN VALUES LPAREN value_list RPAREN SEMI .

    $end            reduce using rule 29 (insert_statement -> INSERT_INTO NAME LPAREN value_list RPAREN VALUES LPAREN value_list RPAREN SEMI .)


state 154

    (7) select_statement -> SELECT selection FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI .

    $end            reduce using rule 7 (select_statement -> SELECT selection FROM NAME join_clause where_clause group_by_clause having_clause order_by_clause limit_clause SEMI .)


state 155

    (27) limit_clause -> LIMIT NUMB .

    SEMI            reduce using rule 27 (limit_clause -> LIMIT NUMB .)


state 156

    (17) join_clause -> JOIN NAME ON NAME DOT NAME EQUALS . NAME DOT NAME

    NAME            shift and go to state 157


state 157

    (17) join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME . DOT NAME

    DOT             shift and go to state 158


state 158

    (17) join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT . NAME

    NAME            shift and go to state 159


state 159

    (17) join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME .

    WHERE           reduce using rule 17 (join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME .)
    GROUP_BY        reduce using rule 17 (join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME .)
    HAVING          reduce using rule 17 (join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME .)
    ORDER_BY        reduce using rule 17 (join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME .)
    LIMIT           reduce using rule 17 (join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME .)
    SEMI            reduce using rule 17 (join_clause -> JOIN NAME ON NAME DOT NAME EQUALS NAME DOT NAME .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 40 resolved as shift
